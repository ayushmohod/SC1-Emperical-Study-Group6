{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.4;\r\n// \"10000000000000000\", \"60000000000\", \"4000000000000000\"\r\n// , 0.004 ETH\r\ncontract CrowdInvestment {\r\n    uint private restAmountToInvest;\r\n    uint private maxGasPrice;\r\n    address private creator;\r\n    mapping(address => uint) private perUserInvestments;\r\n    mapping(address => uint) private additionalCaps;\r\n    uint private limitPerInvestor;\r\n\r\n    function CrowdInvestment(uint totalCap, uint maxGasPriceParam, uint capForEverybody) public {\r\n        restAmountToInvest = totalCap;\r\n        creator = msg.sender;\r\n        maxGasPrice = maxGasPriceParam;\r\n        limitPerInvestor = capForEverybody;\r\n    }\r\n\r\n    function () public payable {\r\n        require(restAmountToInvest >= msg.value); // \u043e\u0431\u0449\u0438\u0439 \u043b\u0438\u043c\u0438\u0442 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439\r\n        require(tx.gasprice <= maxGasPrice); // \u043b\u0438\u043c\u0438\u0442 \u043d\u0430 gas price\r\n        require(getCap(msg.sender) >= msg.value); // \u043b\u0438\u043c\u0438\u0442 \u043d\u0430 \u0438\u043d\u0432\u0435\u0441\u0442\u043e\u0440\u0430\r\n        restAmountToInvest -= msg.value; // \u0443\u043c\u0435\u043d\u044c\u0448\u0438\u043c \u043e\u0431\u0449\u0438\u0439 \u043b\u0438\u043c\u0438\u0442 \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u0439\r\n        perUserInvestments[msg.sender] += msg.value; // \u0437\u0430\u043f\u0438\u0448\u0435\u043c \u0438\u043d\u0432\u0435\u0441\u0442\u0438\u0446\u0438\u044e \u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044f\r\n    }\r\n\r\n    function getCap (address investor) public view returns (uint) {\r\n        return limitPerInvestor - perUserInvestments[investor] + additionalCaps[investor];\r\n    }\r\n\r\n    function getTotalCap () public view returns (uint) {\r\n        return restAmountToInvest;\r\n    }\r\n\r\n    function addPersonalCap (address investor, uint additionalCap) public {\r\n        require(msg.sender == creator);\r\n        additionalCaps[investor] += additionalCap;\r\n    }\r\n\r\n    function addPersonalCaps (address[] memory investors, uint additionalCap) public {\r\n        require(msg.sender == creator);\r\n        for (uint16 i = 0; i < investors.length; i++) {\r\n            additionalCaps[investors[i]] += additionalCap;\r\n        }\r\n    }\r\n\r\n    function withdraw () public {\r\n        require(msg.sender == creator); // \u0442\u043e\u043b\u044c\u043a\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044c \u043c\u043e\u0436\u0435\u0442 \u043f\u0438\u0441\u0430\u0442\u044c\r\n        creator.transfer(this.balance); // \u043f\u0435\u0440\u0435\u0434\u0430\u0434\u0438\u043c \u0432\u0441\u0435 \u0434\u0435\u043d\u044c\u0433\u0438 \u0441\u043e\u0437\u0434\u0430\u0442\u0435\u043b\u044e \u0438 \u0442\u043e\u043b\u044c\u043a\u043e \u0435\u043c\u0443\r\n    }\r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"},{\"name\":\"additionalCap\",\"type\":\"uint256\"}],\"name\":\"addPersonalCap\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"withdraw\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"investors\",\"type\":\"address[]\"},{\"name\":\"additionalCap\",\"type\":\"uint256\"}],\"name\":\"addPersonalCaps\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"getTotalCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"investor\",\"type\":\"address\"}],\"name\":\"getCap\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"totalCap\",\"type\":\"uint256\"},{\"name\":\"maxGasPriceParam\",\"type\":\"uint256\"},{\"name\":\"capForEverybody\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "CrowdInvestment", "CompilerVersion": "v0.4.19+commit.c4cbbb05", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000000df84758000000000000000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://e18cf55225966b31497f6550fa5b00fe75c73b31b02662a86f2516a087113624"}]}