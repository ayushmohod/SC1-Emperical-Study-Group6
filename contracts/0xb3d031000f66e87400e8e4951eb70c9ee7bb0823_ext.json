{"status": "1", "message": "OK", "result": [{"SourceCode": "contract owned {\r\n    address public owner;\r\n\r\n    function owned() {\r\n        owner = msg.sender;\r\n    }\r\n\r\n    modifier onlyOwner {\r\n        if (msg.sender != owner) throw;\r\n        _;\r\n    }\r\n\r\n    function transferOwnership(address newOwner) onlyOwner {\r\n        owner = newOwner;\r\n    }\r\n}\r\n\r\ncontract tokenRecipient { function receiveApproval(address _from, uint256 _value, address _token, bytes _extraData); }\r\n\r\ncontract token {\r\n    /* \u4ee4\u724c\u7684\u516c\u5f00\u53d8\u91cf */\r\n    string public standard = 'Token 0.1';\r\n    string public name;\r\n    string public symbol;\r\n    uint8 public decimals;\r\n    uint256 public totalSupply;\r\n\r\n    /* \u6240\u6709\u8d26\u672c\u7684\u6570\u7ec4 */\r\n    mapping (address => uint256) public balanceOf;\r\n    mapping (address => mapping (address => uint256)) public allowance;\r\n\r\n    /* \u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5f53\u4ea4\u6613\u53d1\u751f\u65f6\uff0c\u901a\u77e5\u5ba2\u6237\u7aef */\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n\r\n    /* \u521d\u59cb\u5316\u5408\u7ea6 */\r\n    function token(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        uint8 decimalUnits,\r\n        string tokenSymbol\r\n        ) {\r\n        balanceOf[msg.sender] = initialSupply;              // \u5408\u7ea6\u7684\u521b\u5efa\u8005\u62e5\u6709\u8fd9\u5408\u7ea6\u6240\u6709\u7684\u521d\u59cb\u4ee4\u724c\r\n        totalSupply = initialSupply;                        // \u66f4\u65b0\u4ee4\u724c\u4f9b\u7ed9\u603b\u6570\r\n        name = tokenName;                                   // \u8bbe\u7f6e\u4ee4\u724c\u7684\u540d\u5b57\r\n        symbol = tokenSymbol;                               // \u8bbe\u7f6e\u4ee4\u724c\u7684\u7b26\u53f7\r\n        decimals = decimalUnits;                            // \u8bbe\u7f6e\u4ee4\u724c\u7684\u5c0f\u6570\u4f4d\r\n    }\r\n\r\n    /* \u53d1\u9001\u4ee4\u724c */\r\n    function transfer(address _to, uint256 _value) {\r\n        if (balanceOf[msg.sender] < _value) throw;           // \u68c0\u67e5\u8fd9\u53d1\u9001\u8005\u662f\u5426\u6709\u8db3\u591f\u591a\u7684\u4ee4\u724c\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // \u68c0\u67e5\u6ea2\u51fa\r\n        balanceOf[msg.sender] -= _value;                     // \u4ece\u53d1\u9001\u8005\u8d26\u6237\u51cf\u53bb\u76f8\u5e94\u7684\u989d\u5ea6\r\n        balanceOf[_to] += _value;                            // \u4ece\u63a5\u6536\u8005\u8d26\u6237\u589e\u52a0\u76f8\u5e94\u7684\u989d\u5ea6\r\n        Transfer(msg.sender, _to, _value);                   // \u4e8b\u4ef6\u3002\u901a\u77e5\u6240\u6709\u6b63\u5728\u76d1\u542c\u8fd9\u4e2a\u5408\u7ea6\u7684\u7528\u6237\r\n    }\r\n\r\n    /* Allow another contract to spend some tokens in your behalf */\r\n    function approve(address _spender, uint256 _value)\r\n        returns (bool success) {\r\n        allowance[msg.sender][_spender] = _value;\r\n        return true;\r\n    }\r\n\r\n    /* Approve and then communicate the approved contract in a single tx */\r\n    function approveAndCall(address _spender, uint256 _value, bytes _extraData)\r\n        returns (bool success) {    \r\n        tokenRecipient spender = tokenRecipient(_spender);\r\n        if (approve(_spender, _value)) {\r\n            spender.receiveApproval(msg.sender, _value, this, _extraData);\r\n            return true;\r\n        }\r\n    }\r\n\r\n    /* A contract attempts to get the coins */\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows\r\n        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance\r\n        balanceOf[_from] -= _value;                          // Subtract from the sender\r\n        balanceOf[_to] += _value;                            // Add the same to the recipient\r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    /* \u533f\u540d\u65b9\u6cd5\uff0c\u9884\u9632\u6709\u4eba\u5411\u8fd9\u5408\u7ea6\u53d1\u9001\u4ee5\u592a\u5e01 */\r\n    function () {\r\n        throw;     \r\n    }\r\n}\r\n\r\ncontract TlzsToken is owned, token {\r\n\r\n\r\n    mapping (address => bool) public frozenAccount;\r\n\r\n    /* \u5b9a\u4e49\u4e00\u4e2a\u4e8b\u4ef6\uff0c\u5f53\u6709\u8d44\u4ea7\u88ab\u51bb\u7ed3\u7684\u65f6\u5019\uff0c\u901a\u77e5\u6b63\u5728\u76d1\u542c\u4e8b\u4ef6\u7684\u5ba2\u6237\u7aef */\r\n    event FrozenFunds(address target, bool frozen);\r\n\r\n    /* \u521d\u59cb\u5316\u5408\u7ea6 */\r\n    function TlzsToken(\r\n        uint256 initialSupply,\r\n        string tokenName,\r\n        uint8 decimalUnits,\r\n        string tokenSymbol\r\n    ) token (initialSupply, tokenName, decimalUnits, tokenSymbol) {}\r\n\r\n    /* \u53d1\u9001\u4ee4\u724c */\r\n    function transfer(address _to, uint256 _value) {\r\n        if (balanceOf[msg.sender] < _value) throw;           // \u68c0\u67e5\u53d1\u9001\u8005\u662f\u5426\u6709\u8db3\u591f\u591a\u7684\u4ee4\u724c\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw; // \u68c0\u67e5\u6ea2\u51fa\r\n        if (frozenAccount[msg.sender]) throw;                // \u68c0\u67e5\u51bb\u7ed3\u72b6\u6001\r\n        balanceOf[msg.sender] -= _value;                     // \u4ece\u53d1\u9001\u8005\u7684\u8d26\u6237\u4e0a\u51cf\u53bb\u76f8\u5e94\u7684\u6570\u989d\r\n        balanceOf[_to] += _value;                            // \u4ece\u63a5\u6536\u8005\u7684\u8d26\u6237\u4e0a\u589e\u52a0\u76f8\u5e94\u7684\u6570\u989d\r\n        Transfer(msg.sender, _to, _value);                   // \u4e8b\u4ef6\u901a\u77e5\r\n    }\r\n\r\n\r\n    /* A contract attempts to get the coins */\r\n    function transferFrom(address _from, address _to, uint256 _value) returns (bool success) {\r\n        if (frozenAccount[_from]) throw;                        // Check if frozen            \r\n        if (balanceOf[_from] < _value) throw;                 // Check if the sender has enough\r\n        if (balanceOf[_to] + _value < balanceOf[_to]) throw;  // Check for overflows\r\n        if (_value > allowance[_from][msg.sender]) throw;   // Check allowance\r\n        balanceOf[_from] -= _value;                          // Subtract from the sender\r\n        balanceOf[_to] += _value;                            // Add the same to the recipient\r\n        allowance[_from][msg.sender] -= _value;\r\n        Transfer(_from, _to, _value);\r\n        return true;\r\n    }\r\n\r\n    function freezeAccount(address target, bool freeze) onlyOwner {\r\n        frozenAccount[target] = freeze;\r\n        FrozenFunds(target, freeze);\r\n    }\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"standard\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"}],\"name\":\"frozenAccount\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"},{\"name\":\"_extraData\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"\",\"type\":\"address\"},{\"name\":\"\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"freeze\",\"type\":\"bool\"}],\"name\":\"freezeAccount\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"initialSupply\",\"type\":\"uint256\"},{\"name\":\"tokenName\",\"type\":\"string\"},{\"name\":\"decimalUnits\",\"type\":\"uint8\"},{\"name\":\"tokenSymbol\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"name\":\"target\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"frozen\",\"type\":\"bool\"}],\"name\":\"FrozenFunds\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"}]", "ContractName": "TlzsToken", "CompilerVersion": "v0.4.19-nightly.2017.11.11+commit.284c3839", "OptimizationUsed": "0", "Runs": "200", "ConstructorArguments": "000000000000000000000000000000000000000000000000002386f26fc100000000000000000000000000000000000000000000000000000000000000000080000000000000000000000000000000000000000000000000000000000000000800000000000000000000000000000000000000000000000000000000000000c00000000000000000000000000000000000000000000000000000000000000004746c7a73000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000004544c5a5300000000000000000000000000000000000000000000000000000000", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://b696119cf004026cc88c25633da7287f568463b50d032470bedd6cf4a5d010bb"}]}