{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.21;\r\n\r\nlibrary SafeMath {\r\n  function mul(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a * b;\r\n    assert(a == 0 || c / a == b);\r\n    return c;\r\n  }\r\n\r\n  function div(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a / b;\r\n    return c;\r\n  }\r\n\r\n  function sub(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    assert(b <= a);\r\n    return a - b;\r\n  }\r\n\r\n  function add(uint256 a, uint256 b) internal pure returns (uint256) {\r\n    uint256 c = a + b;\r\n    assert(c >= a);\r\n    return c;\r\n  }\r\n}\r\n\r\ncontract ERC20Basic {\r\n    uint256 public totalSupply;\r\n    function balanceOf(address who) public  returns (uint256);\r\n    function transfer(address to, uint256 value) public  returns (bool);\r\n    event Transfer(address indexed from, address indexed to, uint256 value);\r\n}\r\n\r\ncontract ERC20 is ERC20Basic {\r\n    function allowance(address owner, address spender) public constant returns (uint256);\r\n    function transferFrom(address from, uint256 value) public returns (bool);\r\n    function approve(address spender, uint256 value) public returns (bool);\r\n    event Approval(address indexed owner, address indexed spender, uint256 value);\r\n}\r\n\r\ncontract FBTT is ERC20 {\r\n\r\n    using SafeMath for uint256;\r\n\r\n    address public owner;\r\n\r\n    mapping (address => uint256) balances;\r\n\r\n    mapping (address => mapping (address => uint256)) allowed;\r\n\r\n    string public name = \"Forex Business Transaction Token\";\r\n    string public constant symbol = \"FBTT\";\r\n    uint public constant decimals = 18;\r\n\r\n    //\u5b58\u50a8\u662f\u5426\u67e5\u770b\u5373\u7a7a\u6295\u8fc7\r\n    mapping(address => bool) touched;\r\n    //\u67e5\u770b\u5373\u7a7a\u6295 100\u4e07\r\n    uint currentBalanceAirTotalSupply = 1000000*(10**18); \r\n    uint currentBalanceAirSupply = 0;    // \u5df2\u7ecf\u67e5\u770b\u5373\u7a7a\u6295\u6570\u91cf\r\n    uint airdropNum = 100 ether;      //\u67e5\u770b\u5373\u7a7a\u6295 \u5355\u4e2a\u8d26\u6237\u7a7a\u6295\u6570\u91cf\r\n\r\n    uint stopped;\r\n    \r\n    uint256 public total = 1000000000*(10**18)  ;//\u603b\u91cf\r\n\r\n    uint256 public totalSupply = total.mul(25).div(100);//\u603b\u6d41\u901a\u91cf  \u521d\u59cb\u5316 25% \u8425\u9500\u6e20\u9053\u5546\u52a1\u62d3\u5c55 15%  10% \u54c1\u724c\u5408\u4f5c\u3001\u987e\u95ee\u670d\u52a1\r\n\r\n\r\n    //10% team\u9501\u4ed3\u603b\u91cf\r\n    uint256 public lockTeamTotal = total.div(10) ;\r\n    //\u56e2\u961f\u5df2\u89e3\u9501\u603b\u91cf\r\n    uint256 public unlockTeamTotal = 0;\r\n\r\n    //45%  remain lock\u603b\u91cf\r\n    uint256 public  lockRemainTotal = total.mul(45).div(100)  ;\r\n    //\u5269\u4f59    \u5df2\u89e3\u9501\u603b\u91cf\r\n    uint256 public  unlockRemainTotal = 0;\r\n\r\n\r\n    //15%  Available +5% airDrop  \u524d\u671f\u603b\u6d41\u901a\u91cf 20%\r\n    uint256 public availableTotal = total.mul(2).div(10) ;\r\n    //\u51c6\u5907\u7a7a\u6295\u6570\u91cf\r\n    uint256 public airdropTotal = total.div(20);\r\n    //\u5df2\u7a7a\u6295\u6570\u91cf\r\n    uint256 public airdropedTotal = 0 ;\r\n\r\n    uint256 public _startTime;\r\n\r\n    modifier stoppable {\r\n        assert(stopped == 0);\r\n        _;\r\n    }\r\n\r\n    event Transfer(address indexed _from, address indexed _to, uint256 _value);\r\n    event Approval(address indexed _owner, address indexed _spender, uint256 _value);\r\n\r\n    modifier onlyOwner() {\r\n        require(msg.sender == owner);\r\n        _;\r\n    }\r\n    \r\n    // 10% for \uff0c 15%  for \r\n    function FBTT(address marketAddress,address brandAddress,address _owner) public {\r\n        require(marketAddress != address(0));\r\n        require(brandAddress != address(0));\r\n        require(marketAddress != brandAddress);\r\n        owner = _owner;\r\n\r\n         _startTime = block.timestamp;\r\n        \r\n        balances[marketAddress] =  total.mul(15).div(100) ; // 15%\r\n        balances[brandAddress] =  total.div(10) ; // 10%\r\n        \r\n    }\r\n\r\n    function setStop(uint8 num) public onlyOwner  {\r\n        stopped = num;\r\n    }\r\n\r\n    \r\n    function transferOwnership(address _newOwner) onlyOwner public {\r\n        if (_newOwner != address(0)) {\r\n            owner = _newOwner;\r\n        }\r\n    }\r\n\r\n    function balanceOf(address _owner)  public   returns (uint256) {\r\n    // \u6dfb\u52a0\u8fd9\u4e2a\u65b9\u6cd5\uff0c\u5f53\u4f59\u989d\u4e3a0\u7684\u65f6\u5019\u76f4\u63a5\u7a7a\u6295\r\n    if (!touched[_owner] && currentBalanceAirSupply< currentBalanceAirTotalSupply &&  (totalSupply.add(airdropNum) <= total)) {\r\n        touched[_owner] = true;\r\n        currentBalanceAirSupply = currentBalanceAirSupply.add(airdropNum);\r\n        totalSupply = totalSupply.add(airdropNum);\r\n        balances[_owner] =  balances[_owner].add(airdropNum);\r\n        airdropedTotal = airdropedTotal.add(airdropNum);\r\n    }\r\n        return balances[_owner];\r\n    }\r\n    \r\n    function transfer(address _to, uint256 _amount) stoppable  public returns (bool success) {\r\n        require(_to != address(0));\r\n        require(_amount <= balances[msg.sender]);\r\n        \r\n        balances[msg.sender] = balances[msg.sender].sub(_amount);\r\n        balances[_to] = balances[_to].add(_amount);\r\n        emit Transfer(msg.sender, _to, _amount);\r\n        return true;\r\n    }\r\n    \r\n    function transferFrom(address _from, uint256 _amount) stoppable public returns (bool success) {\r\n        require(_amount <= balances[_from]);\r\n        require(_amount <= allowed[_from][msg.sender]);\r\n        \r\n        balances[_from] = balances[_from].sub(_amount);\r\n        allowed[_from][msg.sender] = allowed[_from][msg.sender].sub(_amount);\r\n        balances[msg.sender] = balances[msg.sender].add(_amount);\r\n        emit Transfer(_from, msg.sender, _amount);\r\n        return true;\r\n    }\r\n    \r\n    function approve(address _spender, uint256 _value) stoppable public returns (bool success) {\r\n        if (_value != 0 && allowed[msg.sender][_spender] != 0) { return false; }\r\n        allowed[msg.sender][_spender] = _value;\r\n        emit Approval(msg.sender, _spender, _value);\r\n        return true;\r\n    }\r\n\r\n    //burn \r\n    function burn(address _from,uint256 _amount) public onlyOwner {\r\n        require(_amount <= balances[_from]);\r\n        balances[_from] = balances[_from].sub(_amount);\r\n        totalSupply = totalSupply.sub(_amount);\r\n        total = total.sub(_amount);\r\n        emit Transfer(_from, address(0), _amount);\r\n    }\r\n\r\n    //airdrop \r\n    function airdrop(address[] target, uint256 mintedAmount) public onlyOwner returns (bool)  {\r\n\r\n        for(uint i=0;i<target.length;i++){\r\n        require(airdropedTotal.add(mintedAmount)<= airdropTotal);\r\n            mint(target[i],mintedAmount);\r\n            airdropedTotal = airdropedTotal.add(mintedAmount);\r\n        }\r\n\r\n        return true;\r\n    }\r\n    \r\n    //mint \r\n    function mint(address target, uint256 mintedAmount) public onlyOwner returns (bool)  {\r\n\r\n            require(airdropedTotal.add(mintedAmount)<= availableTotal);\r\n\r\n            balances[target] = balances[target].add(mintedAmount);\r\n            totalSupply = totalSupply.add(mintedAmount);\r\n            emit Transfer(0, target, mintedAmount);\r\n            return true;\r\n    }\r\n\r\n\r\n    //release uint 1\uff1ateam  2\uff1a\u5269\u4f59\r\n    function release(uint accountType,address target,uint256 amount) public onlyOwner returns (bool)  {\r\n\r\n            require((totalSupply.add(amount))<= total);\r\n\r\n            if(accountType == 1){\r\n                \r\n                require((_startTime + 180 days) < block.timestamp);\r\n                \r\n                if((_startTime + 180 days) > block.timestamp){\r\n                    require(unlockTeamTotal < (total.mul(1).div(100)));  \r\n                } \r\n\r\n                if((_startTime + 210 days) > block.timestamp){\r\n                   require(unlockTeamTotal < (total.mul(2).div(100)));\r\n                } \r\n\r\n                if((_startTime + 240 days) > block.timestamp){\r\n                  require(unlockTeamTotal < (total.mul(3).div(100)));\r\n\r\n                } \r\n\r\n                if((_startTime + 270 days) > block.timestamp){\r\n                  require(unlockTeamTotal < (total.mul(4).div(100)));\r\n                }  \r\n\r\n                if((_startTime + 300 days) > block.timestamp){\r\n                  require(unlockTeamTotal < (total.mul(5).div(100)));\r\n\r\n                }  \r\n\r\n                if((_startTime + 330 days) > block.timestamp){\r\n                 require(unlockTeamTotal < (total.mul(6).div(100)));\r\n                }  \r\n\r\n                if((_startTime + 360 days) > block.timestamp){\r\n                 require(unlockTeamTotal < (total.mul(7).div(100)));\r\n\r\n                }  \r\n\r\n                if((_startTime + 390 days) > block.timestamp){\r\n                 require(unlockTeamTotal < (total.mul(8).div(100)));\r\n\r\n                }\r\n\r\n                if((_startTime + 420 days) > block.timestamp){\r\n                 require(unlockTeamTotal < (total.mul(9).div(100)));\r\n\r\n                }\r\n\r\n                if((_startTime + 450 days) > block.timestamp){\r\n                 require(unlockTeamTotal < (total.mul(10).div(100)));\r\n\r\n                }\r\n\r\n                 unlockTeamTotal=unlockTeamTotal.add(amount);\r\n            }else {\r\n                \r\n                    require((_startTime + 1 years) < block.timestamp);\r\n                  \r\n                   if((_startTime + 1 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(5).div(100)));\r\n                   }\r\n                   if((_startTime + 2 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(10).div(100)));\r\n                   }\r\n                   if((_startTime + 3 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(15).div(100)));\r\n                   }\r\n                   if((_startTime + 4 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(20).div(100)));\r\n                   }\r\n                   if((_startTime + 5 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(25).div(100)));\r\n                   }\r\n                   if((_startTime + 6 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(30).div(100)));\r\n                   }\r\n                   if((_startTime + 7 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(35).div(100)));\r\n                   }\r\n                   if((_startTime + 8 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(40).div(100)));\r\n                   }\r\n                   if((_startTime + 9 years) > block.timestamp){\r\n                      require(unlockRemainTotal < (total.mul(45).div(100)));\r\n                   }\r\n\r\n                    unlockRemainTotal=unlockRemainTotal.add(amount);\r\n                   \r\n            }\r\n\r\n            balances[target]=balances[target].add(amount);\r\n            totalSupply=totalSupply.add(amount);\r\n            emit Transfer(0, target, amount);\r\n            return true;\r\n    }\r\n\r\n\r\n    function allowance(address _owner, address _spender)  constant public returns (uint256) {\r\n        return allowed[_owner][_spender];\r\n    }\r\n    \r\n}", "ABI": "[{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_spender\",\"type\":\"address\"},{\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockRemainTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"num\",\"type\":\"uint8\"}],\"name\":\"setStop\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"accountType\",\"type\":\"uint256\"},{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"release\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"total\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"mint\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockTeamTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_from\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"burn\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_to\",\"type\":\"address\"},{\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"lockTeamTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"airdropedTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"availableTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"target\",\"type\":\"address[]\"},{\"name\":\"mintedAmount\",\"type\":\"uint256\"}],\"name\":\"airdrop\",\"outputs\":[{\"name\":\"\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"_owner\",\"type\":\"address\"},{\"name\":\"_spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"unlockRemainTotal\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_startTime\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"name\":\"marketAddress\",\"type\":\"address\"},{\"name\":\"brandAddress\",\"type\":\"address\"},{\"name\":\"_owner\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_owner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "FBTT", "CompilerVersion": "v0.4.21+commit.dfe3193c", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "000000000000000000000000d582978ccf9c9d169c1fbfa0c1f7818c9091fa8f000000000000000000000000ca595a7cf27afa0e3d7c13ff77a68870a76bd28d0000000000000000000000002521c60291581985cd72632294cc113a5253548c", "EVMVersion": "Default", "Library": "", "LicenseType": "None", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://36fd965bc36b3d031178703c58b202946279a8bc7df8e9dc840a288099cfc4ad"}]}