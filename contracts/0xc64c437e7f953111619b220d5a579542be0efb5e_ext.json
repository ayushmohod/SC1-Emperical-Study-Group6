{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.19;\r\n\r\ncontract Ownable {\r\n  address public owner;\r\n\r\n\r\n  /** \r\n   * @dev The Ownable constructor sets the original `owner` of the contract to the sender\r\n   * account.\r\n   */\r\n  function Ownable() internal {\r\n    owner = msg.sender;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Throws if called by any account other than the owner. \r\n   */\r\n  modifier onlyOwner() {\r\n    require(msg.sender == owner);\r\n    _;\r\n  }\r\n\r\n\r\n  /**\r\n   * @dev Allows the current owner to transfer control of the contract to a newOwner.\r\n   * @param newOwner The address to transfer ownership to. \r\n   */\r\n  function transferOwnership(address newOwner) onlyOwner public {\r\n    require(newOwner != address(0));\r\n    owner = newOwner;\r\n  }\r\n\r\n}\r\n\r\n// The owner of this contract should be an externally owned account\r\ncontract LotteryInvestment is Ownable {\r\n\r\n  // Address of the target contract\r\n  address public investment_address = 0x62Ef732Ec9BAB90070f4ac4e065Ce1CC090D909f;\r\n  // Major partner address\r\n  address public major_partner_address = 0x8f0592bDCeE38774d93bC1fd2c97ee6540385356;\r\n  // Minor partner address\r\n  address public minor_partner_address = 0xC787C3f6F75D7195361b64318CE019f90507f806;\r\n  // Gas used for transfers.\r\n  uint public gas = 3000;\r\n\r\n  // Payments to this contract require a bit of gas. 100k should be enough.\r\n  function() payable public {\r\n    execute_transfer(msg.value);\r\n  }\r\n\r\n  // Transfer some funds to the target investment address.\r\n  function execute_transfer(uint transfer_amount) internal {\r\n    // Major fee is 2,4% = 24 / 1000\r\n    uint major_fee = transfer_amount * 24 / 1000;\r\n    // Minor fee is 1,6% = 16 / 1000\r\n    uint minor_fee = transfer_amount * 16 / 1000;\r\n\r\n    require(major_partner_address.call.gas(gas).value(major_fee)());\r\n    require(minor_partner_address.call.gas(gas).value(minor_fee)());\r\n\r\n    // Send the rest\r\n    require(investment_address.call.gas(gas).value(transfer_amount - major_fee - minor_fee)());\r\n  }\r\n\r\n    // Sets the amount of gas allowed to investors\r\n  function set_transfer_gas(uint transfer_gas) public onlyOwner {\r\n    gas = transfer_gas;\r\n  }\r\n\r\n}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"investment_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"transfer_gas\",\"type\":\"uint256\"}],\"name\":\"set_transfer_gas\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"gas\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"minor_partner_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"major_partner_address\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"}]", "ContractName": "LotteryInvestment", "CompilerVersion": "v0.4.19+commit.c4cbbb05", "OptimizationUsed": "1", "Runs": "0", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://e97e551662192950eb709cab70aacba0609aa9f4bc6470ab543a8d4f44772c52"}]}