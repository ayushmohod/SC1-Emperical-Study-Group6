{"status": "1", "message": "OK", "result": [{"SourceCode": "pragma solidity ^0.4.18;\r\n\r\n\tlibrary SafeMath {\r\n\t    function add(uint a, uint b) internal pure returns (uint c) {\r\n\t        c = a + b;\r\n\t        require(c >= a);\r\n\t    }\r\n\t    function sub(uint a, uint b) internal pure returns (uint c) {\r\n\t        require(b <= a);\r\n\t        c = a - b;\r\n\t    }\r\n\t    function mul(uint a, uint b) internal pure returns (uint c) {\r\n\t        c = a * b;\r\n\t        require(a == 0 || c / a == b);\r\n\t    }\r\n\t    function div(uint a, uint b) internal pure returns (uint c) {\r\n\t        require(b > 0);\r\n\t        c = a / b;\r\n\t    }\r\n\t}\r\n\r\n\tcontract ERC20Interface {\r\n\t    function totalSupply() public constant returns (uint);\r\n\t    function balanceOf(address tokenOwner) public constant returns (uint balance);\r\n\t    function allowance(address tokenOwner, address spender) public constant returns (uint remaining);\r\n\t    function transfer(address to, uint tokens) public returns (bool success);\r\n\t    function approve(address spender, uint tokens) public returns (bool success);\r\n\t    function transferFrom(address from, address to, uint tokens) public returns (bool success);\r\n\r\n\t    event Transfer(address indexed from, address indexed to, uint tokens);\r\n\t    event Approval(address indexed tokenOwner, address indexed spender, uint tokens);\r\n\t}\r\n\r\n\tcontract ApproveAndCallFallBack {\r\n\t    function receiveApproval(address from, uint256 tokens, address token, bytes data) public;\r\n\t}\r\n\r\n\tcontract Owned {\r\n\t    address public owner;\r\n\t    address public newOwner;\r\n\r\n\t    event OwnershipTransferred(address indexed _from, address indexed _to);\r\n\r\n\t    function Owned() public {\r\n\t        owner = msg.sender;\r\n\t    }\r\n\r\n\t    modifier onlyOwner {\r\n\t        require(msg.sender == owner);\r\n\t        _;\r\n\t    }\r\n\r\n\t    function transferOwnership(address _newOwner) public onlyOwner {\r\n\t        newOwner = _newOwner;\r\n\t    }\r\n\t    function acceptOwnership() public {\r\n\t        require(msg.sender == newOwner);\r\n\t        OwnershipTransferred(owner, newOwner);\r\n\t        owner = newOwner;\r\n\t        newOwner = address(0);\r\n\t    }\r\n\t}\r\n\r\n\tcontract Foryoucoin is ERC20Interface, Owned {\r\n\t    using SafeMath for uint;\r\n\r\n\t    string public symbol;\r\n\t    string public  name;\r\n\t    uint8 public decimals;\r\n\t    uint public _totalSupply;\r\n\r\n\t    mapping(address => uint) balances;\r\n\t    mapping(address => mapping(address => uint)) allowed;\r\n\r\n\t    function Foryoucoin() public {\r\n\t        symbol = \"FYC\";\r\n\t        name = \"Foryoucoin\";\r\n\t        decimals = 8;\r\n\t        _totalSupply = 5000000000 * 10**uint(decimals);\r\n\t        balances[owner] = _totalSupply;\r\n\t        Transfer(address(0), owner, _totalSupply);\r\n\t    }\r\n\r\n\t    function totalSupply() public constant returns (uint) {\r\n\t        return _totalSupply  - balances[address(0)];\r\n\t    }\r\n\r\n\t    function balanceOf(address tokenOwner) public constant returns (uint balance) {\r\n\t        return balances[tokenOwner];\r\n\t    }\r\n\r\n\t    function transfer(address to, uint tokens) public returns (bool success) {\r\n\t        balances[msg.sender] = balances[msg.sender].sub(tokens);\r\n\t        balances[to] = balances[to].add(tokens);\r\n\t        Transfer(msg.sender, to, tokens);\r\n\t        return true;\r\n\t    }\r\n\r\n\t    function approve(address spender, uint tokens) public returns (bool success) {\r\n\t        allowed[msg.sender][spender] = tokens;\r\n\t        Approval(msg.sender, spender, tokens);\r\n\t        return true;\r\n\t    }\r\n\r\n\t    function transferFrom(address from, address to, uint tokens) public returns (bool success) {\r\n\t        balances[from] = balances[from].sub(tokens);\r\n\t        allowed[from][msg.sender] = allowed[from][msg.sender].sub(tokens);\r\n\t        balances[to] = balances[to].add(tokens);\r\n\t        Transfer(from, to, tokens);\r\n\t        return true;\r\n\t    }\r\n\r\n\t    function allowance(address tokenOwner, address spender) public constant returns (uint remaining) {\r\n\t        return allowed[tokenOwner][spender];\r\n\t    }\r\n\r\n\t    function approveAndCall(address spender, uint tokens, bytes data) public returns (bool success) {\r\n\t        allowed[msg.sender][spender] = tokens;\r\n\t        Approval(msg.sender, spender, tokens);\r\n\t        ApproveAndCallFallBack(spender).receiveApproval(msg.sender, tokens, this, data);\r\n\t        return true;\r\n\t    }\r\n\r\n\t    function () public payable {\r\n\t        revert();\r\n\t    }\r\n\r\n\t    function transferAnyERC20Token(address tokenAddress, uint tokens) public onlyOwner returns (bool success) {\r\n\t        return ERC20Interface(tokenAddress).transfer(owner, tokens);\r\n\t    }\r\n\t}", "ABI": "[{\"constant\":true,\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"from\",\"type\":\"address\"},{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"decimals\",\"outputs\":[{\"name\":\"\",\"type\":\"uint8\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"_totalSupply\",\"outputs\":[{\"name\":\"\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"name\":\"balance\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[],\"name\":\"acceptOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"name\":\"\",\"type\":\"string\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"to\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transfer\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"spender\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"},{\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"approveAndCall\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[],\"name\":\"newOwner\",\"outputs\":[{\"name\":\"\",\"type\":\"address\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"tokenAddress\",\"type\":\"address\"},{\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"transferAnyERC20Token\",\"outputs\":[{\"name\":\"success\",\"type\":\"bool\"}],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"constant\":true,\"inputs\":[{\"name\":\"tokenOwner\",\"type\":\"address\"},{\"name\":\"spender\",\"type\":\"address\"}],\"name\":\"allowance\",\"outputs\":[{\"name\":\"remaining\",\"type\":\"uint256\"}],\"payable\":false,\"stateMutability\":\"view\",\"type\":\"function\"},{\"constant\":false,\"inputs\":[{\"name\":\"_newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"payable\":false,\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"payable\":true,\"stateMutability\":\"payable\",\"type\":\"fallback\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"_from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"_to\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"to\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"name\":\"tokenOwner\",\"type\":\"address\"},{\"indexed\":true,\"name\":\"spender\",\"type\":\"address\"},{\"indexed\":false,\"name\":\"tokens\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"}]", "ContractName": "Foryoucoin", "CompilerVersion": "v0.4.18+commit.9cf6e910", "OptimizationUsed": "1", "Runs": "200", "ConstructorArguments": "", "EVMVersion": "Default", "Library": "", "LicenseType": "", "Proxy": "0", "Implementation": "", "SwarmSource": "bzzr://7f4121d89bd9f891b6d408e7c4689b22f147d704accf13263254c282d54df080"}]}